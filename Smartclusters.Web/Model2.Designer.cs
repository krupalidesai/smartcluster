//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("smartclustersModel", "Reg_id", "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Smartclusters.Web.registration), "country_data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Smartclusters.Web.country_data), true)]
[assembly: EdmRelationshipAttribute("smartclustersModel", "RegId", "registration", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Smartclusters.Web.registration), "stck_data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Smartclusters.Web.stck_data), true)]

#endregion

namespace Smartclusters.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class smartclustersEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new smartclustersEntities2 object using the connection string found in the 'smartclustersEntities2' section of the application configuration file.
        /// </summary>
        public smartclustersEntities2() : base("name=smartclustersEntities2", "smartclustersEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new smartclustersEntities2 object.
        /// </summary>
        public smartclustersEntities2(string connectionString) : base(connectionString, "smartclustersEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new smartclustersEntities2 object.
        /// </summary>
        public smartclustersEntities2(EntityConnection connection) : base(connection, "smartclustersEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<country_data> country_data
        {
            get
            {
                if ((_country_data == null))
                {
                    _country_data = base.CreateObjectSet<country_data>("country_data");
                }
                return _country_data;
            }
        }
        private ObjectSet<country_data> _country_data;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<registration> registrations
        {
            get
            {
                if ((_registrations == null))
                {
                    _registrations = base.CreateObjectSet<registration>("registrations");
                }
                return _registrations;
            }
        }
        private ObjectSet<registration> _registrations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<stck_data> stck_data
        {
            get
            {
                if ((_stck_data == null))
                {
                    _stck_data = base.CreateObjectSet<stck_data>("stck_data");
                }
                return _stck_data;
            }
        }
        private ObjectSet<stck_data> _stck_data;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the country_data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocountry_data(country_data country_data)
        {
            base.AddObject("country_data", country_data);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the registrations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToregistrations(registration registration)
        {
            base.AddObject("registrations", registration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the stck_data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostck_data(stck_data stck_data)
        {
            base.AddObject("stck_data", stck_data);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smartclustersModel", Name="country_data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class country_data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new country_data object.
        /// </summary>
        /// <param name="countryname">Initial value of the Countryname property.</param>
        /// <param name="population">Initial value of the Population property.</param>
        public static country_data Createcountry_data(global::System.String countryname, global::System.Int32 population)
        {
            country_data country_data = new country_data();
            country_data.Countryname = countryname;
            country_data.Population = population;
            return country_data;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Countryname
        {
            get
            {
                return _Countryname;
            }
            set
            {
                if (_Countryname != value)
                {
                    OnCountrynameChanging(value);
                    ReportPropertyChanging("Countryname");
                    _Countryname = StructuralObject.SetValidValue(value, false, "Countryname");
                    ReportPropertyChanged("Countryname");
                    OnCountrynameChanged();
                }
            }
        }
        private global::System.String _Countryname;
        partial void OnCountrynameChanging(global::System.String value);
        partial void OnCountrynameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Population
        {
            get
            {
                return _Population;
            }
            set
            {
                OnPopulationChanging(value);
                ReportPropertyChanging("Population");
                _Population = StructuralObject.SetValidValue(value, "Population");
                ReportPropertyChanged("Population");
                OnPopulationChanged();
            }
        }
        private global::System.Int32 _Population;
        partial void OnPopulationChanging(global::System.Int32 value);
        partial void OnPopulationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Reg_id
        {
            get
            {
                return _Reg_id;
            }
            set
            {
                OnReg_idChanging(value);
                ReportPropertyChanging("Reg_id");
                _Reg_id = StructuralObject.SetValidValue(value, "Reg_id");
                ReportPropertyChanged("Reg_id");
                OnReg_idChanged();
            }
        }
        private Nullable<global::System.Int32> _Reg_id;
        partial void OnReg_idChanging(Nullable<global::System.Int32> value);
        partial void OnReg_idChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smartclustersModel", "Reg_id", "registration")]
        public registration registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("smartclustersModel.Reg_id", "registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("smartclustersModel.Reg_id", "registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<registration> registrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("smartclustersModel.Reg_id", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registration>("smartclustersModel.Reg_id", "registration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smartclustersModel", Name="registration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class registration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new registration object.
        /// </summary>
        /// <param name="reg_Id">Initial value of the Reg_Id property.</param>
        /// <param name="fname">Initial value of the Fname property.</param>
        /// <param name="lname">Initial value of the Lname property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="confirmPassword">Initial value of the ConfirmPassword property.</param>
        public static registration Createregistration(global::System.Int32 reg_Id, global::System.String fname, global::System.String lname, global::System.String email, global::System.String password, global::System.String confirmPassword)
        {
            registration registration = new registration();
            registration.Reg_Id = reg_Id;
            registration.Fname = fname;
            registration.Lname = lname;
            registration.Email = email;
            registration.Password = password;
            registration.ConfirmPassword = confirmPassword;
            return registration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reg_Id
        {
            get
            {
                return _Reg_Id;
            }
            set
            {
                if (_Reg_Id != value)
                {
                    OnReg_IdChanging(value);
                    ReportPropertyChanging("Reg_Id");
                    _Reg_Id = StructuralObject.SetValidValue(value, "Reg_Id");
                    ReportPropertyChanged("Reg_Id");
                    OnReg_IdChanged();
                }
            }
        }
        private global::System.Int32 _Reg_Id;
        partial void OnReg_IdChanging(global::System.Int32 value);
        partial void OnReg_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fname
        {
            get
            {
                return _Fname;
            }
            set
            {
                OnFnameChanging(value);
                ReportPropertyChanging("Fname");
                _Fname = StructuralObject.SetValidValue(value, false, "Fname");
                ReportPropertyChanged("Fname");
                OnFnameChanged();
            }
        }
        private global::System.String _Fname;
        partial void OnFnameChanging(global::System.String value);
        partial void OnFnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lname
        {
            get
            {
                return _Lname;
            }
            set
            {
                OnLnameChanging(value);
                ReportPropertyChanging("Lname");
                _Lname = StructuralObject.SetValidValue(value, false, "Lname");
                ReportPropertyChanged("Lname");
                OnLnameChanged();
            }
        }
        private global::System.String _Lname;
        partial void OnLnameChanging(global::System.String value);
        partial void OnLnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfirmPassword
        {
            get
            {
                return _ConfirmPassword;
            }
            set
            {
                OnConfirmPasswordChanging(value);
                ReportPropertyChanging("ConfirmPassword");
                _ConfirmPassword = StructuralObject.SetValidValue(value, false, "ConfirmPassword");
                ReportPropertyChanged("ConfirmPassword");
                OnConfirmPasswordChanged();
            }
        }
        private global::System.String _ConfirmPassword;
        partial void OnConfirmPasswordChanging(global::System.String value);
        partial void OnConfirmPasswordChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smartclustersModel", "Reg_id", "country_data")]
        public EntityCollection<country_data> country_data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<country_data>("smartclustersModel.Reg_id", "country_data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<country_data>("smartclustersModel.Reg_id", "country_data", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smartclustersModel", "RegId", "stck_data")]
        public EntityCollection<stck_data> stck_data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<stck_data>("smartclustersModel.RegId", "stck_data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<stck_data>("smartclustersModel.RegId", "stck_data", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="smartclustersModel", Name="stck_data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class stck_data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new stck_data object.
        /// </summary>
        /// <param name="stck_idxx">Initial value of the stck_idxx property.</param>
        public static stck_data Createstck_data(global::System.Int32 stck_idxx)
        {
            stck_data stck_data = new stck_data();
            stck_data.stck_idxx = stck_idxx;
            return stck_data;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 stck_idxx
        {
            get
            {
                return _stck_idxx;
            }
            set
            {
                if (_stck_idxx != value)
                {
                    Onstck_idxxChanging(value);
                    ReportPropertyChanging("stck_idxx");
                    _stck_idxx = StructuralObject.SetValidValue(value, "stck_idxx");
                    ReportPropertyChanged("stck_idxx");
                    Onstck_idxxChanged();
                }
            }
        }
        private global::System.Int32 _stck_idxx;
        partial void Onstck_idxxChanging(global::System.Int32 value);
        partial void Onstck_idxxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String stck_name
        {
            get
            {
                return _stck_name;
            }
            set
            {
                Onstck_nameChanging(value);
                ReportPropertyChanging("stck_name");
                _stck_name = StructuralObject.SetValidValue(value, true, "stck_name");
                ReportPropertyChanged("stck_name");
                Onstck_nameChanged();
            }
        }
        private global::System.String _stck_name;
        partial void Onstck_nameChanging(global::System.String value);
        partial void Onstck_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> stck_sale
        {
            get
            {
                return _stck_sale;
            }
            set
            {
                Onstck_saleChanging(value);
                ReportPropertyChanging("stck_sale");
                _stck_sale = StructuralObject.SetValidValue(value, "stck_sale");
                ReportPropertyChanged("stck_sale");
                Onstck_saleChanged();
            }
        }
        private Nullable<global::System.Int32> _stck_sale;
        partial void Onstck_saleChanging(Nullable<global::System.Int32> value);
        partial void Onstck_saleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> stck_prft
        {
            get
            {
                return _stck_prft;
            }
            set
            {
                Onstck_prftChanging(value);
                ReportPropertyChanging("stck_prft");
                _stck_prft = StructuralObject.SetValidValue(value, "stck_prft");
                ReportPropertyChanged("stck_prft");
                Onstck_prftChanged();
            }
        }
        private Nullable<global::System.Single> _stck_prft;
        partial void Onstck_prftChanging(Nullable<global::System.Single> value);
        partial void Onstck_prftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> stck_aset
        {
            get
            {
                return _stck_aset;
            }
            set
            {
                Onstck_asetChanging(value);
                ReportPropertyChanging("stck_aset");
                _stck_aset = StructuralObject.SetValidValue(value, "stck_aset");
                ReportPropertyChanged("stck_aset");
                Onstck_asetChanged();
            }
        }
        private Nullable<global::System.Single> _stck_aset;
        partial void Onstck_asetChanging(Nullable<global::System.Single> value);
        partial void Onstck_asetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> stck_mrkt_valu
        {
            get
            {
                return _stck_mrkt_valu;
            }
            set
            {
                Onstck_mrkt_valuChanging(value);
                ReportPropertyChanging("stck_mrkt_valu");
                _stck_mrkt_valu = StructuralObject.SetValidValue(value, "stck_mrkt_valu");
                ReportPropertyChanged("stck_mrkt_valu");
                Onstck_mrkt_valuChanged();
            }
        }
        private Nullable<global::System.Single> _stck_mrkt_valu;
        partial void Onstck_mrkt_valuChanging(Nullable<global::System.Single> value);
        partial void Onstck_mrkt_valuChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegId
        {
            get
            {
                return _RegId;
            }
            set
            {
                OnRegIdChanging(value);
                ReportPropertyChanging("RegId");
                _RegId = StructuralObject.SetValidValue(value, "RegId");
                ReportPropertyChanged("RegId");
                OnRegIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RegId;
        partial void OnRegIdChanging(Nullable<global::System.Int32> value);
        partial void OnRegIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("smartclustersModel", "RegId", "registration")]
        public registration registration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("smartclustersModel.RegId", "registration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("smartclustersModel.RegId", "registration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<registration> registrationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registration>("smartclustersModel.RegId", "registration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registration>("smartclustersModel.RegId", "registration", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
